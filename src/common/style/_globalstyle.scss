// pc3-width
$pc3-media: 1920px;

// pc2-width
$pc3s-media: 1919px;
$pc2-media: 1280px;

// pc-width
$pc2s-media: 1279px;
$pc-media: 960px;

// pad-width
$pcs-media: 959px;
$pad-media: 760px;

// small-pad-width
$pads-media: 759px;
$phone-media: 480px;

// phone-width
$phones-media: 479px;

// 電腦3
@mixin pc3-width {
  @media all and (min-width: $pc3-media) {
    @content;
  }
}

// 電腦2
@mixin pc2-width {
  @media all and (min-width: $pc2-media) and (max-width: $pc3s-media) {
    @content;
  }
}

// 電腦
@mixin pc-width {
  @media all and (min-width: $pc-media) and (max-width: $pc2s-media) {
    @content;
  }
}

// 平板
@mixin pad-width {
  @media all and (min-width: $pad-media) and (max-width: $pcs-media) {
    @content;
  }
}

// 小平板
@mixin small-pad-width {
  @media all and (min-width: $phone-media) and (max-width: $pads-media) {
    @content;
  }
}
// 手機
@mixin phone-width {
  @media all and (max-width: $phones-media) {
    @content;
  }
}

// Property
$color_main: #2c3238;
$color_second: #3a3f48;
$color_third: #697180;
$color_third_hover: #b7c2d6;
$color_white: #fff;
$color_orange: #ffb34a;
$color_yellow: #ffd633;
$color_apple_green: #78be20;
$color_green: #2ebc4f;
$color_black: #333;
$color_blue_start: #19283d;
$color_blue_end: #1d678f;
$color_rain: #4dacff;
$color_white_cloud: #f2f9fe;
$color_grey_cloud: #ccc;

$color_font_main: #868e9c;

// Mixin
@mixin size($width: 100%, $height: 100%) {
  width: $width;
  height: $height;
}

@mixin flex-layout($dir: row, $justify-content: center, $align-items: center) {
  display: flex;
  flex-direction: $dir;
  justify-content: $justify-content;
  align-items: $align-items;
}

@mixin border($width: 1px, $type: solid, $color: black) {
  border: $width $type $color;
}

@mixin stroke($color: black, $width: 1px) {
  stroke: $color;
  stroke-width: $width;
}

@mixin independent($color: rgb(248, 130, 130), $zIndex: 1) {
  position: absolute;
  content: '';
  background-color: $color;
  z-index: $zIndex;
}

// configure for project
* {
  margin: 0px;
  padding: 0px;
  box-sizing: border-box;
  @include border();
}

.main-container {
  background: rgb(214, 216, 217);
  background: linear-gradient(
    90deg,
    rgba(214, 216, 217, 1) 3%,
    rgba(253, 251, 251, 1) 41%,
    rgba(219, 221, 222, 1) 75%,
    rgba(214, 216, 217, 1) 100%
  );
}

#loading-bar {
  @include independent(#fff, 1100);
  @include size(100%, 100vh);
  @include flex-layout(row, center, center);
  position: fixed;

  $offset: 187;
  $duration: 1.4s;

  .spinner {
    animation: rotator $duration linear infinite;
  }

  @keyframes rotator {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(270deg);
    }
  }

  .path {
    stroke-dasharray: $offset;
    stroke-dashoffset: 0;
    transform-origin: center;
    animation: dash $duration ease-in-out infinite, colors ($duration * 4) ease-in-out infinite;
  }

  @keyframes colors {
    0% {
      stroke: #4285f4;
    }
    25% {
      stroke: #de3e35;
    }
    50% {
      stroke: #f7c223;
    }
    75% {
      stroke: #1b9a59;
    }
    100% {
      stroke: #4285f4;
    }
  }

  @keyframes dash {
    0% {
      stroke-dashoffset: $offset;
    }
    50% {
      stroke-dashoffset: $offset/4;
      transform: rotate(135deg);
    }
    100% {
      stroke-dashoffset: $offset;
      transform: rotate(450deg);
    }
  }
}

#menu-window {
  @include size(100%, 100vh);
  @include independent(rgba($color: black, $alpha: 0.5), 1000);
  position: fixed;
  display: none;

  #menu-window-close {
    float: right;
    margin-top: 20px;
    margin-right: 20px;
    padding: 20px;
  }
}

nav {
  @include size(100%, auto);
  @include flex-layout(row, space-between, center);
  position: relative;

  #home {
    @include independent(transparent);
    top: 35px;
    left: 300px;
  }

  #menu {
    $menu-height: 20px;
    $ham-width: 2px;
    @include size(35px, $menu-height);
    @include independent(transparent, 1001);
    @include flex-layout(row, space-around, center);
    cursor: pointer;
    top: 35px;
    right: 300px;

    span {
      &::before {
        @include independent(#000);
        @include size(100%, $ham-width);
        left: 0;
        top: 0;
        transition: width 0.35s 0.45s;
      }

      &::after {
        @include independent(#000);
        @include size(100%, $ham-width);
        right: 0;
        bottom: 0;
        transition: width 0.35s 0.45s;
      }
    }

    &::before {
      @include independent(#000);
      @include size(100%, $ham-width);
      left: 0;
      top: calc((#{$menu-height} / 2) - (#{$ham-width} / 2));
      transform-origin: center center;
      transition: 0.45s cubic-bezier(0.33, 1, 0.68, 1);
    }

    &::after {
      @include independent(#000);
      @include size(100%, $ham-width);
      right: 0;
      bottom: calc((#{$menu-height} / 2) - (#{$ham-width} / 2));
      transform-origin: center center;
      transition: 0.45s cubic-bezier(0.33, 1, 0.68, 1);
    }
  }

  #menu.show {
    span {
      &::before {
        right: 0;
        width: 0;
        transition: width 0.8s;
      }

      &::after {
        width: 0;
        transition: width 0.8s;
      }
    }

    &::before {
      transform: rotate(-45deg);
      transition: transform 0.5s 0.65s cubic-bezier(0.33, 1, 0.68, 1);
    }

    &::after {
      transform: rotate(45deg);
      transition: transform 0.5s 0.65s cubic-bezier(0.33, 1, 0.68, 1);
    }
  }
}

.footer {
  background-color: #ffffff;

  .top {
    @include size(100%, auto);
    @include flex-layout(row, center, flex-start);
    padding: 90px 0px 25px 0px;

    @include phone-width() {
      flex-wrap: wrap;
      height: auto;
    }
  }

  .meddle {
  }

  .bottom {
    @include size(100%, 22px);
    svg {
      @include size(100%, auto);
    }
  }

  .footer-content {
    @include size(auto, auto);
    display: inline-block;
    margin-right: 100px;
    padding: 10px;

    .title {
      font-size: 18px;
    }

    .main-link {
      font-size: 16px;
    }

    .sub-title {
      font-size: 16px;
    }

    .sub-link {
      font-size: 14px;
      padding-left: 18px;
    }

    @include phone-width() {
      width: 100%;
    }
  }

  .link {
    cursor: pointer;

    a {
      text-decoration: none;
      color: black;
      transition: 0.2s linear;

      &:hover {
        color: gray;
      }
    }
  }
}

#copy-right {
  display: inline-block;
  margin: 10px 0px 0px 30px;
  padding: 5px;
}

// configure for font
.tch-r {
  font-family: 'Bosch Sans CHS Regular';
}

.tch-b {
  font-family: 'Bosch Sans CHS Bold';
}

.eng-bl {
  font-family: 'Bosch Sans Black';
}

.eng-bl-l {
  font-family: 'Bosch Sans BlackItalic';
}

.eng-b {
  font-family: 'Bosch Sans Bold';
}

.eng-b-l {
  font-family: 'Bosch Sans BoldItalic';
}

.eng-l {
  font-family: 'Bosch Sans Light';
}

.eng-l-l {
  font-family: 'Bosch Sans LightItalic';
}

.eng-m {
  font-family: 'Bosch Sans Medium';
}

.eng-m-l {
  font-family: 'Bosch Sans MediumItalic';
}

.eng-r {
  font-family: 'Bosch Sans Regular';
}

.eng-r-i {
  font-family: 'Bosch Sans RegularItalic';
}

.title {
  font-size: 64px;
}

.sub-title {
  font-size: 24px;
}

.bottom-line {
  position: relative;
  display: inline-block;
  line-height: 2.75;

  &::after {
    @include independent(transparent);
    @include size(100%, 4px);
    content: '';
    background-color: #000000;
    left: 0px;
    bottom: 0px;
    z-index: 10;
  }
}

// Btn for more
.btn-more {
  @include flex-layout(row, center, center);
  position: relative;
  display: inline-flex;
  cursor: pointer;

  .bg-circle {
    $circle-radius: 150px;
    @include independent(transparent);
    @include size($circle-radius, $circle-radius);

    cursor: auto;
    pointer-events: none;
    left: calc((#{$circle-radius} / 2 * (-1)) + 10px);
    z-index: 1;
    transform: scale(0.15);
    opacity: 0;

    transition: all 0.25s cubic-bezier(0.25, 1, 0.5, 1);

    svg {
      @include size($circle-radius, $circle-radius);

      circle {
        fill: rgb(143, 143, 143);
      }
    }
  }

  > svg {
    z-index: 2;
    margin-right: 20px;
  }

  > p {
    z-index: 2;
    display: inline-block;
    transition: all 0.15s linear;
  }

  &:hover {
    .bg-circle {
      opacity: 1;
      transform: scale(1);
    }
  }
}

// Btn - color for background
.btn-more-color-orange {
  .bg-circle {
    svg {
      circle {
        fill: $color_orange;
      }
    }
  }
}
.btn-more-color-black {
  .bg-circle {
    svg {
      circle {
        fill: $color_main;
      }
    }
  }
}
.btn-more-color-apple-green {
  .bg-circle {
    svg {
      circle {
        fill: $color_apple_green;
      }
    }
  }
}

// Btn - direction for move
.btn-more-hover-right-5 {
  &:hover {
    > p {
      transform: translateX(5px);
    }
  }
}
.btn-more-hover-right-10 {
  &:hover {
    > p {
      transform: translateX(10px);
    }
  }
}
.btn-more-hover-right-15 {
  &:hover {
    > p {
      transform: translateX(15px);
    }
  }
}
.btn-more-hover-right-20 {
  &:hover {
    > p {
      transform: translateX(20px);
    }
  }
}

// Btn - size fo radius
$circle-radius-75: 75px;
$circle-radius-85: 85px;
$circle-radius-100: 100px;

$circle-radius-offset-10: 10px;
$circle-radius-offset-20: 20px;
$circle-radius-offset-30: 30px;
$circle-radius-offset-40: 40px;
$circle-radius-offset-50: 50px;

.btn-more-size-75 {
  .bg-circle {
    @include size($circle-radius-75, $circle-radius-75);
    left: calc((#{$circle-radius-75} / 2 * (-1)) + #{$circle-radius-offset-10});

    svg {
      @include size($circle-radius-75, $circle-radius-75);
    }
  }
}
.btn-more-size-85 {
  .bg-circle {
    @include size($circle-radius-85, $circle-radius-85);
    left: calc((#{$circle-radius-85} / 2 * (-1)) + #{$circle-radius-offset-10});

    svg {
      @include size($circle-radius-85, $circle-radius-85);
    }
  }
}
.btn-more-size-100 {
  .bg-circle {
    @include size($circle-radius-100, $circle-radius-100);
    left: calc((#{$circle-radius-100} / 2 * (-1)) + #{$circle-radius-offset-10});

    svg {
      @include size($circle-radius-100, $circle-radius-100);
    }
  }
}
